Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> ifsuldeminas compiladores inicio codigos fim
Rule 2     ifsuldeminas -> IFSULDEMINAS
Rule 3     compiladores -> COMPILADORES
Rule 4     inicio -> INICIO
Rule 5     fim -> FIM
Rule 6     codigos -> codigos codigo
Rule 7     codigos -> codigo
Rule 8     codigo -> TIPO VAR
Rule 9     codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO
Rule 10    codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL
Rule 11    codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR
Rule 12    codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO
Rule 13    codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR
Rule 14    varmat -> VAR INTEIRO
Rule 15    varmat -> VAR REAL
Rule 16    operacao -> INTEIRO OPER_MAT INTEIRO
Rule 17    operacao -> varmat OPER_MAT varmat
Rule 18    operacao -> varmat OPER_MAT INTEIRO
Rule 19    operacao -> INTEIRO OPER_MAT varmat
Rule 20    operacao -> REAL OPER_MAT REAL
Rule 21    operacao -> varmat OPER_MAT REAL
Rule 22    operacao -> REAL OPER_MAT varmat
Rule 23    codigo -> operacao
Rule 24    codigo -> operacao operacao
Rule 25    codigo -> INT
Rule 26    codigo -> REAL
Rule 27    codigo -> BOOLEANO
Rule 28    codigo -> CADEIA_CAR
Rule 29    logico -> VAR OPER_LOG VAR
Rule 30    logico -> VAR OPER_LOG CADEIA_CAR
Rule 31    logico -> VAR OPER_LOG INTEIRO
Rule 32    logico -> VAR OPER_LOG REAL
Rule 33    relacional -> VAR OPER_RELA VAR
Rule 34    relacional -> VAR OPER_RELA INTEIRO
Rule 35    relacional -> VAR OPER_RELA REAL
Rule 36    relacional -> VAR OPER_RELA CADEIA_CAR
Rule 37    expinterna -> ABRE_CHAV codigos FECHA_CHAV
Rule 38    codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna
Rule 39    codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna
Rule 40    codigo -> SE ABRE_PAR logico FECHA_PAR expinterna
Rule 41    codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna
Rule 42    codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna
Rule 43    codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna
Rule 44    codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna
Rule 45    codigo -> RETORNO ABRE_PAR VAR FECHA_PAR
Rule 46    codigo -> RETORNO INTEIRO
Rule 47    param_vazio -> <empty>
Rule 48    parametro -> INTEIRO
Rule 49    parametro -> REAL
Rule 50    parametro -> CADEIA_CAR
Rule 51    parametro -> VAR
Rule 52    parametro -> parametro VIRG parametro
Rule 53    regrafunk -> ABRE_PAR param_vazio FECHA_PAR
Rule 54    regrafunk -> ABRE_PAR parametro FECHA_PAR
Rule 55    codigo -> FUNK NOME_FUNK regrafunk expinterna
Rule 56    codigo -> NOME_FUNK regrafunk
Rule 57    codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR
Rule 58    codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR
Rule 59    codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR
Rule 60    codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR
Rule 61    codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR
Rule 62    codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR
Rule 63    codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR
Rule 64    codigo -> LEIA ABRE_PAR VAR FECHA_PAR

Terminals, with rules where they appear

ABRE_CHAV            : 37
ABRE_PAR             : 38 39 40 41 42 43 44 45 53 54 57 58 59 60 61 62 63 64
BOOLEANO             : 12 27 44
CADEIA_CAR           : 11 28 30 36 50 57 58 60 62
COMPILADORES         : 3
ENQUANTO             : 43 44
ESCREVA              : 57 58 59 60 61 62 63
FECHA_CHAV           : 37
FECHA_PAR            : 38 39 40 41 42 43 44 45 53 54 57 58 59 60 61 62 63 64
FIM                  : 5
FUNK                 : 55
IFSULDEMINAS         : 2
INICIO               : 4
INT                  : 25
INTEIRO              : 9 14 16 16 18 19 31 34 46 48 60 61
ITERADORES           : 38
LEIA                 : 64
NOME_FUNK            : 55 56
OPER_ATRIB_IGUAL     : 9 10 11 12 13
OPER_LOG             : 29 30 31 32
OPER_MAT             : 16 17 18 19 20 21 22
OPER_RELA            : 33 34 35 36
PARA                 : 38
PONTO_VIRG           : 38 38
REAL                 : 10 15 20 20 21 22 26 32 35 49 62 63
RETORNO              : 45 46
SE                   : 39 40 41 42
SENAO                : 41 42
TIPO                 : 8 9 10 11 12 13
VAR                  : 8 9 10 11 12 13 13 14 15 29 29 30 31 32 33 33 34 35 36 38 45 51 58 59 64
VIRG                 : 52
error                : 

Nonterminals, with rules where they appear

codigo               : 6 7
codigos              : 1 6 37
compiladores         : 1
expinterna           : 38 39 40 41 41 42 42 43 44 55
fim                  : 1
ifsuldeminas         : 1
inicio               : 1
logico               : 40 42
operacao             : 23 24 24
param_vazio          : 53
parametro            : 52 52 54
programa             : 0
regrafunk            : 55 56
relacional           : 38 38 39 41 43
varmat               : 17 17 18 19 21 22

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . ifsuldeminas compiladores inicio codigos fim
    (2) ifsuldeminas -> . IFSULDEMINAS

    IFSULDEMINAS    shift and go to state 3

    programa                       shift and go to state 1
    ifsuldeminas                   shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> ifsuldeminas . compiladores inicio codigos fim
    (3) compiladores -> . COMPILADORES

    COMPILADORES    shift and go to state 5

    compiladores                   shift and go to state 4

state 3

    (2) ifsuldeminas -> IFSULDEMINAS .

    COMPILADORES    reduce using rule 2 (ifsuldeminas -> IFSULDEMINAS .)


state 4

    (1) programa -> ifsuldeminas compiladores . inicio codigos fim
    (4) inicio -> . INICIO

    INICIO          shift and go to state 7

    inicio                         shift and go to state 6

state 5

    (3) compiladores -> COMPILADORES .

    INICIO          reduce using rule 3 (compiladores -> COMPILADORES .)


state 6

    (1) programa -> ifsuldeminas compiladores inicio . codigos fim
    (6) codigos -> . codigos codigo
    (7) codigos -> . codigo
    (8) codigo -> . TIPO VAR
    (9) codigo -> . TIPO VAR OPER_ATRIB_IGUAL INTEIRO
    (10) codigo -> . TIPO VAR OPER_ATRIB_IGUAL REAL
    (11) codigo -> . TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR
    (12) codigo -> . TIPO VAR OPER_ATRIB_IGUAL BOOLEANO
    (13) codigo -> . TIPO VAR OPER_ATRIB_IGUAL VAR
    (23) codigo -> . operacao
    (24) codigo -> . operacao operacao
    (25) codigo -> . INT
    (26) codigo -> . REAL
    (27) codigo -> . BOOLEANO
    (28) codigo -> . CADEIA_CAR
    (38) codigo -> . PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna
    (39) codigo -> . SE ABRE_PAR relacional FECHA_PAR expinterna
    (40) codigo -> . SE ABRE_PAR logico FECHA_PAR expinterna
    (41) codigo -> . SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna
    (42) codigo -> . SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna
    (43) codigo -> . ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna
    (44) codigo -> . ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna
    (45) codigo -> . RETORNO ABRE_PAR VAR FECHA_PAR
    (46) codigo -> . RETORNO INTEIRO
    (55) codigo -> . FUNK NOME_FUNK regrafunk expinterna
    (56) codigo -> . NOME_FUNK regrafunk
    (57) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR
    (58) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR
    (59) codigo -> . ESCREVA ABRE_PAR VAR FECHA_PAR
    (60) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR
    (61) codigo -> . ESCREVA ABRE_PAR INTEIRO FECHA_PAR
    (62) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR
    (63) codigo -> . ESCREVA ABRE_PAR REAL FECHA_PAR
    (64) codigo -> . LEIA ABRE_PAR VAR FECHA_PAR
    (16) operacao -> . INTEIRO OPER_MAT INTEIRO
    (17) operacao -> . varmat OPER_MAT varmat
    (18) operacao -> . varmat OPER_MAT INTEIRO
    (19) operacao -> . INTEIRO OPER_MAT varmat
    (20) operacao -> . REAL OPER_MAT REAL
    (21) operacao -> . varmat OPER_MAT REAL
    (22) operacao -> . REAL OPER_MAT varmat
    (14) varmat -> . VAR INTEIRO
    (15) varmat -> . VAR REAL

    TIPO            shift and go to state 10
    INT             shift and go to state 17
    REAL            shift and go to state 13
    BOOLEANO        shift and go to state 15
    CADEIA_CAR      shift and go to state 14
    PARA            shift and go to state 18
    SE              shift and go to state 19
    ENQUANTO        shift and go to state 20
    RETORNO         shift and go to state 21
    FUNK            shift and go to state 22
    NOME_FUNK       shift and go to state 23
    ESCREVA         shift and go to state 24
    LEIA            shift and go to state 25
    INTEIRO         shift and go to state 12
    VAR             shift and go to state 11

    codigos                        shift and go to state 8
    codigo                         shift and go to state 9
    operacao                       shift and go to state 16
    varmat                         shift and go to state 26

state 7

    (4) inicio -> INICIO .

    TIPO            reduce using rule 4 (inicio -> INICIO .)
    INT             reduce using rule 4 (inicio -> INICIO .)
    REAL            reduce using rule 4 (inicio -> INICIO .)
    BOOLEANO        reduce using rule 4 (inicio -> INICIO .)
    CADEIA_CAR      reduce using rule 4 (inicio -> INICIO .)
    PARA            reduce using rule 4 (inicio -> INICIO .)
    SE              reduce using rule 4 (inicio -> INICIO .)
    ENQUANTO        reduce using rule 4 (inicio -> INICIO .)
    RETORNO         reduce using rule 4 (inicio -> INICIO .)
    FUNK            reduce using rule 4 (inicio -> INICIO .)
    NOME_FUNK       reduce using rule 4 (inicio -> INICIO .)
    ESCREVA         reduce using rule 4 (inicio -> INICIO .)
    LEIA            reduce using rule 4 (inicio -> INICIO .)
    INTEIRO         reduce using rule 4 (inicio -> INICIO .)
    VAR             reduce using rule 4 (inicio -> INICIO .)


state 8

    (1) programa -> ifsuldeminas compiladores inicio codigos . fim
    (6) codigos -> codigos . codigo
    (5) fim -> . FIM
    (8) codigo -> . TIPO VAR
    (9) codigo -> . TIPO VAR OPER_ATRIB_IGUAL INTEIRO
    (10) codigo -> . TIPO VAR OPER_ATRIB_IGUAL REAL
    (11) codigo -> . TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR
    (12) codigo -> . TIPO VAR OPER_ATRIB_IGUAL BOOLEANO
    (13) codigo -> . TIPO VAR OPER_ATRIB_IGUAL VAR
    (23) codigo -> . operacao
    (24) codigo -> . operacao operacao
    (25) codigo -> . INT
    (26) codigo -> . REAL
    (27) codigo -> . BOOLEANO
    (28) codigo -> . CADEIA_CAR
    (38) codigo -> . PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna
    (39) codigo -> . SE ABRE_PAR relacional FECHA_PAR expinterna
    (40) codigo -> . SE ABRE_PAR logico FECHA_PAR expinterna
    (41) codigo -> . SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna
    (42) codigo -> . SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna
    (43) codigo -> . ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna
    (44) codigo -> . ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna
    (45) codigo -> . RETORNO ABRE_PAR VAR FECHA_PAR
    (46) codigo -> . RETORNO INTEIRO
    (55) codigo -> . FUNK NOME_FUNK regrafunk expinterna
    (56) codigo -> . NOME_FUNK regrafunk
    (57) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR
    (58) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR
    (59) codigo -> . ESCREVA ABRE_PAR VAR FECHA_PAR
    (60) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR
    (61) codigo -> . ESCREVA ABRE_PAR INTEIRO FECHA_PAR
    (62) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR
    (63) codigo -> . ESCREVA ABRE_PAR REAL FECHA_PAR
    (64) codigo -> . LEIA ABRE_PAR VAR FECHA_PAR
    (16) operacao -> . INTEIRO OPER_MAT INTEIRO
    (17) operacao -> . varmat OPER_MAT varmat
    (18) operacao -> . varmat OPER_MAT INTEIRO
    (19) operacao -> . INTEIRO OPER_MAT varmat
    (20) operacao -> . REAL OPER_MAT REAL
    (21) operacao -> . varmat OPER_MAT REAL
    (22) operacao -> . REAL OPER_MAT varmat
    (14) varmat -> . VAR INTEIRO
    (15) varmat -> . VAR REAL

    FIM             shift and go to state 29
    TIPO            shift and go to state 10
    INT             shift and go to state 17
    REAL            shift and go to state 13
    BOOLEANO        shift and go to state 15
    CADEIA_CAR      shift and go to state 14
    PARA            shift and go to state 18
    SE              shift and go to state 19
    ENQUANTO        shift and go to state 20
    RETORNO         shift and go to state 21
    FUNK            shift and go to state 22
    NOME_FUNK       shift and go to state 23
    ESCREVA         shift and go to state 24
    LEIA            shift and go to state 25
    INTEIRO         shift and go to state 12
    VAR             shift and go to state 11

    fim                            shift and go to state 27
    codigo                         shift and go to state 28
    operacao                       shift and go to state 16
    varmat                         shift and go to state 26

state 9

    (7) codigos -> codigo .

    FIM             reduce using rule 7 (codigos -> codigo .)
    TIPO            reduce using rule 7 (codigos -> codigo .)
    INT             reduce using rule 7 (codigos -> codigo .)
    REAL            reduce using rule 7 (codigos -> codigo .)
    BOOLEANO        reduce using rule 7 (codigos -> codigo .)
    CADEIA_CAR      reduce using rule 7 (codigos -> codigo .)
    PARA            reduce using rule 7 (codigos -> codigo .)
    SE              reduce using rule 7 (codigos -> codigo .)
    ENQUANTO        reduce using rule 7 (codigos -> codigo .)
    RETORNO         reduce using rule 7 (codigos -> codigo .)
    FUNK            reduce using rule 7 (codigos -> codigo .)
    NOME_FUNK       reduce using rule 7 (codigos -> codigo .)
    ESCREVA         reduce using rule 7 (codigos -> codigo .)
    LEIA            reduce using rule 7 (codigos -> codigo .)
    INTEIRO         reduce using rule 7 (codigos -> codigo .)
    VAR             reduce using rule 7 (codigos -> codigo .)
    FECHA_CHAV      reduce using rule 7 (codigos -> codigo .)


state 10

    (8) codigo -> TIPO . VAR
    (9) codigo -> TIPO . VAR OPER_ATRIB_IGUAL INTEIRO
    (10) codigo -> TIPO . VAR OPER_ATRIB_IGUAL REAL
    (11) codigo -> TIPO . VAR OPER_ATRIB_IGUAL CADEIA_CAR
    (12) codigo -> TIPO . VAR OPER_ATRIB_IGUAL BOOLEANO
    (13) codigo -> TIPO . VAR OPER_ATRIB_IGUAL VAR

    VAR             shift and go to state 30


state 11

    (14) varmat -> VAR . INTEIRO
    (15) varmat -> VAR . REAL

    INTEIRO         shift and go to state 31
    REAL            shift and go to state 32


state 12

    (16) operacao -> INTEIRO . OPER_MAT INTEIRO
    (19) operacao -> INTEIRO . OPER_MAT varmat

    OPER_MAT        shift and go to state 33


state 13

    (26) codigo -> REAL .
    (20) operacao -> REAL . OPER_MAT REAL
    (22) operacao -> REAL . OPER_MAT varmat

    FIM             reduce using rule 26 (codigo -> REAL .)
    TIPO            reduce using rule 26 (codigo -> REAL .)
    INT             reduce using rule 26 (codigo -> REAL .)
    REAL            reduce using rule 26 (codigo -> REAL .)
    BOOLEANO        reduce using rule 26 (codigo -> REAL .)
    CADEIA_CAR      reduce using rule 26 (codigo -> REAL .)
    PARA            reduce using rule 26 (codigo -> REAL .)
    SE              reduce using rule 26 (codigo -> REAL .)
    ENQUANTO        reduce using rule 26 (codigo -> REAL .)
    RETORNO         reduce using rule 26 (codigo -> REAL .)
    FUNK            reduce using rule 26 (codigo -> REAL .)
    NOME_FUNK       reduce using rule 26 (codigo -> REAL .)
    ESCREVA         reduce using rule 26 (codigo -> REAL .)
    LEIA            reduce using rule 26 (codigo -> REAL .)
    INTEIRO         reduce using rule 26 (codigo -> REAL .)
    VAR             reduce using rule 26 (codigo -> REAL .)
    FECHA_CHAV      reduce using rule 26 (codigo -> REAL .)
    OPER_MAT        shift and go to state 34


state 14

    (28) codigo -> CADEIA_CAR .

    FIM             reduce using rule 28 (codigo -> CADEIA_CAR .)
    TIPO            reduce using rule 28 (codigo -> CADEIA_CAR .)
    INT             reduce using rule 28 (codigo -> CADEIA_CAR .)
    REAL            reduce using rule 28 (codigo -> CADEIA_CAR .)
    BOOLEANO        reduce using rule 28 (codigo -> CADEIA_CAR .)
    CADEIA_CAR      reduce using rule 28 (codigo -> CADEIA_CAR .)
    PARA            reduce using rule 28 (codigo -> CADEIA_CAR .)
    SE              reduce using rule 28 (codigo -> CADEIA_CAR .)
    ENQUANTO        reduce using rule 28 (codigo -> CADEIA_CAR .)
    RETORNO         reduce using rule 28 (codigo -> CADEIA_CAR .)
    FUNK            reduce using rule 28 (codigo -> CADEIA_CAR .)
    NOME_FUNK       reduce using rule 28 (codigo -> CADEIA_CAR .)
    ESCREVA         reduce using rule 28 (codigo -> CADEIA_CAR .)
    LEIA            reduce using rule 28 (codigo -> CADEIA_CAR .)
    INTEIRO         reduce using rule 28 (codigo -> CADEIA_CAR .)
    VAR             reduce using rule 28 (codigo -> CADEIA_CAR .)
    FECHA_CHAV      reduce using rule 28 (codigo -> CADEIA_CAR .)


state 15

    (27) codigo -> BOOLEANO .

    FIM             reduce using rule 27 (codigo -> BOOLEANO .)
    TIPO            reduce using rule 27 (codigo -> BOOLEANO .)
    INT             reduce using rule 27 (codigo -> BOOLEANO .)
    REAL            reduce using rule 27 (codigo -> BOOLEANO .)
    BOOLEANO        reduce using rule 27 (codigo -> BOOLEANO .)
    CADEIA_CAR      reduce using rule 27 (codigo -> BOOLEANO .)
    PARA            reduce using rule 27 (codigo -> BOOLEANO .)
    SE              reduce using rule 27 (codigo -> BOOLEANO .)
    ENQUANTO        reduce using rule 27 (codigo -> BOOLEANO .)
    RETORNO         reduce using rule 27 (codigo -> BOOLEANO .)
    FUNK            reduce using rule 27 (codigo -> BOOLEANO .)
    NOME_FUNK       reduce using rule 27 (codigo -> BOOLEANO .)
    ESCREVA         reduce using rule 27 (codigo -> BOOLEANO .)
    LEIA            reduce using rule 27 (codigo -> BOOLEANO .)
    INTEIRO         reduce using rule 27 (codigo -> BOOLEANO .)
    VAR             reduce using rule 27 (codigo -> BOOLEANO .)
    FECHA_CHAV      reduce using rule 27 (codigo -> BOOLEANO .)


state 16

    (23) codigo -> operacao .
    (24) codigo -> operacao . operacao
    (16) operacao -> . INTEIRO OPER_MAT INTEIRO
    (17) operacao -> . varmat OPER_MAT varmat
    (18) operacao -> . varmat OPER_MAT INTEIRO
    (19) operacao -> . INTEIRO OPER_MAT varmat
    (20) operacao -> . REAL OPER_MAT REAL
    (21) operacao -> . varmat OPER_MAT REAL
    (22) operacao -> . REAL OPER_MAT varmat
    (14) varmat -> . VAR INTEIRO
    (15) varmat -> . VAR REAL

  ! shift/reduce conflict for INTEIRO resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    FIM             reduce using rule 23 (codigo -> operacao .)
    TIPO            reduce using rule 23 (codigo -> operacao .)
    INT             reduce using rule 23 (codigo -> operacao .)
    BOOLEANO        reduce using rule 23 (codigo -> operacao .)
    CADEIA_CAR      reduce using rule 23 (codigo -> operacao .)
    PARA            reduce using rule 23 (codigo -> operacao .)
    SE              reduce using rule 23 (codigo -> operacao .)
    ENQUANTO        reduce using rule 23 (codigo -> operacao .)
    RETORNO         reduce using rule 23 (codigo -> operacao .)
    FUNK            reduce using rule 23 (codigo -> operacao .)
    NOME_FUNK       reduce using rule 23 (codigo -> operacao .)
    ESCREVA         reduce using rule 23 (codigo -> operacao .)
    LEIA            reduce using rule 23 (codigo -> operacao .)
    FECHA_CHAV      reduce using rule 23 (codigo -> operacao .)
    INTEIRO         shift and go to state 12
    REAL            shift and go to state 36
    VAR             shift and go to state 11

  ! REAL            [ reduce using rule 23 (codigo -> operacao .) ]
  ! INTEIRO         [ reduce using rule 23 (codigo -> operacao .) ]
  ! VAR             [ reduce using rule 23 (codigo -> operacao .) ]

    operacao                       shift and go to state 35
    varmat                         shift and go to state 26

state 17

    (25) codigo -> INT .

    FIM             reduce using rule 25 (codigo -> INT .)
    TIPO            reduce using rule 25 (codigo -> INT .)
    INT             reduce using rule 25 (codigo -> INT .)
    REAL            reduce using rule 25 (codigo -> INT .)
    BOOLEANO        reduce using rule 25 (codigo -> INT .)
    CADEIA_CAR      reduce using rule 25 (codigo -> INT .)
    PARA            reduce using rule 25 (codigo -> INT .)
    SE              reduce using rule 25 (codigo -> INT .)
    ENQUANTO        reduce using rule 25 (codigo -> INT .)
    RETORNO         reduce using rule 25 (codigo -> INT .)
    FUNK            reduce using rule 25 (codigo -> INT .)
    NOME_FUNK       reduce using rule 25 (codigo -> INT .)
    ESCREVA         reduce using rule 25 (codigo -> INT .)
    LEIA            reduce using rule 25 (codigo -> INT .)
    INTEIRO         reduce using rule 25 (codigo -> INT .)
    VAR             reduce using rule 25 (codigo -> INT .)
    FECHA_CHAV      reduce using rule 25 (codigo -> INT .)


state 18

    (38) codigo -> PARA . ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna

    ABRE_PAR        shift and go to state 37


state 19

    (39) codigo -> SE . ABRE_PAR relacional FECHA_PAR expinterna
    (40) codigo -> SE . ABRE_PAR logico FECHA_PAR expinterna
    (41) codigo -> SE . ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna
    (42) codigo -> SE . ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna

    ABRE_PAR        shift and go to state 38


state 20

    (43) codigo -> ENQUANTO . ABRE_PAR relacional FECHA_PAR expinterna
    (44) codigo -> ENQUANTO . ABRE_PAR BOOLEANO FECHA_PAR expinterna

    ABRE_PAR        shift and go to state 39


state 21

    (45) codigo -> RETORNO . ABRE_PAR VAR FECHA_PAR
    (46) codigo -> RETORNO . INTEIRO

    ABRE_PAR        shift and go to state 40
    INTEIRO         shift and go to state 41


state 22

    (55) codigo -> FUNK . NOME_FUNK regrafunk expinterna

    NOME_FUNK       shift and go to state 42


state 23

    (56) codigo -> NOME_FUNK . regrafunk
    (53) regrafunk -> . ABRE_PAR param_vazio FECHA_PAR
    (54) regrafunk -> . ABRE_PAR parametro FECHA_PAR

    ABRE_PAR        shift and go to state 44

    regrafunk                      shift and go to state 43

state 24

    (57) codigo -> ESCREVA . ABRE_PAR CADEIA_CAR FECHA_PAR
    (58) codigo -> ESCREVA . ABRE_PAR CADEIA_CAR VAR FECHA_PAR
    (59) codigo -> ESCREVA . ABRE_PAR VAR FECHA_PAR
    (60) codigo -> ESCREVA . ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR
    (61) codigo -> ESCREVA . ABRE_PAR INTEIRO FECHA_PAR
    (62) codigo -> ESCREVA . ABRE_PAR CADEIA_CAR REAL FECHA_PAR
    (63) codigo -> ESCREVA . ABRE_PAR REAL FECHA_PAR

    ABRE_PAR        shift and go to state 45


state 25

    (64) codigo -> LEIA . ABRE_PAR VAR FECHA_PAR

    ABRE_PAR        shift and go to state 46


state 26

    (17) operacao -> varmat . OPER_MAT varmat
    (18) operacao -> varmat . OPER_MAT INTEIRO
    (21) operacao -> varmat . OPER_MAT REAL

    OPER_MAT        shift and go to state 47


state 27

    (1) programa -> ifsuldeminas compiladores inicio codigos fim .

    $end            reduce using rule 1 (programa -> ifsuldeminas compiladores inicio codigos fim .)


state 28

    (6) codigos -> codigos codigo .

    FIM             reduce using rule 6 (codigos -> codigos codigo .)
    TIPO            reduce using rule 6 (codigos -> codigos codigo .)
    INT             reduce using rule 6 (codigos -> codigos codigo .)
    REAL            reduce using rule 6 (codigos -> codigos codigo .)
    BOOLEANO        reduce using rule 6 (codigos -> codigos codigo .)
    CADEIA_CAR      reduce using rule 6 (codigos -> codigos codigo .)
    PARA            reduce using rule 6 (codigos -> codigos codigo .)
    SE              reduce using rule 6 (codigos -> codigos codigo .)
    ENQUANTO        reduce using rule 6 (codigos -> codigos codigo .)
    RETORNO         reduce using rule 6 (codigos -> codigos codigo .)
    FUNK            reduce using rule 6 (codigos -> codigos codigo .)
    NOME_FUNK       reduce using rule 6 (codigos -> codigos codigo .)
    ESCREVA         reduce using rule 6 (codigos -> codigos codigo .)
    LEIA            reduce using rule 6 (codigos -> codigos codigo .)
    INTEIRO         reduce using rule 6 (codigos -> codigos codigo .)
    VAR             reduce using rule 6 (codigos -> codigos codigo .)
    FECHA_CHAV      reduce using rule 6 (codigos -> codigos codigo .)


state 29

    (5) fim -> FIM .

    $end            reduce using rule 5 (fim -> FIM .)


state 30

    (8) codigo -> TIPO VAR .
    (9) codigo -> TIPO VAR . OPER_ATRIB_IGUAL INTEIRO
    (10) codigo -> TIPO VAR . OPER_ATRIB_IGUAL REAL
    (11) codigo -> TIPO VAR . OPER_ATRIB_IGUAL CADEIA_CAR
    (12) codigo -> TIPO VAR . OPER_ATRIB_IGUAL BOOLEANO
    (13) codigo -> TIPO VAR . OPER_ATRIB_IGUAL VAR

    FIM             reduce using rule 8 (codigo -> TIPO VAR .)
    TIPO            reduce using rule 8 (codigo -> TIPO VAR .)
    INT             reduce using rule 8 (codigo -> TIPO VAR .)
    REAL            reduce using rule 8 (codigo -> TIPO VAR .)
    BOOLEANO        reduce using rule 8 (codigo -> TIPO VAR .)
    CADEIA_CAR      reduce using rule 8 (codigo -> TIPO VAR .)
    PARA            reduce using rule 8 (codigo -> TIPO VAR .)
    SE              reduce using rule 8 (codigo -> TIPO VAR .)
    ENQUANTO        reduce using rule 8 (codigo -> TIPO VAR .)
    RETORNO         reduce using rule 8 (codigo -> TIPO VAR .)
    FUNK            reduce using rule 8 (codigo -> TIPO VAR .)
    NOME_FUNK       reduce using rule 8 (codigo -> TIPO VAR .)
    ESCREVA         reduce using rule 8 (codigo -> TIPO VAR .)
    LEIA            reduce using rule 8 (codigo -> TIPO VAR .)
    INTEIRO         reduce using rule 8 (codigo -> TIPO VAR .)
    VAR             reduce using rule 8 (codigo -> TIPO VAR .)
    FECHA_CHAV      reduce using rule 8 (codigo -> TIPO VAR .)
    OPER_ATRIB_IGUAL shift and go to state 48


state 31

    (14) varmat -> VAR INTEIRO .

    OPER_MAT        reduce using rule 14 (varmat -> VAR INTEIRO .)
    INTEIRO         reduce using rule 14 (varmat -> VAR INTEIRO .)
    REAL            reduce using rule 14 (varmat -> VAR INTEIRO .)
    VAR             reduce using rule 14 (varmat -> VAR INTEIRO .)
    FIM             reduce using rule 14 (varmat -> VAR INTEIRO .)
    TIPO            reduce using rule 14 (varmat -> VAR INTEIRO .)
    INT             reduce using rule 14 (varmat -> VAR INTEIRO .)
    BOOLEANO        reduce using rule 14 (varmat -> VAR INTEIRO .)
    CADEIA_CAR      reduce using rule 14 (varmat -> VAR INTEIRO .)
    PARA            reduce using rule 14 (varmat -> VAR INTEIRO .)
    SE              reduce using rule 14 (varmat -> VAR INTEIRO .)
    ENQUANTO        reduce using rule 14 (varmat -> VAR INTEIRO .)
    RETORNO         reduce using rule 14 (varmat -> VAR INTEIRO .)
    FUNK            reduce using rule 14 (varmat -> VAR INTEIRO .)
    NOME_FUNK       reduce using rule 14 (varmat -> VAR INTEIRO .)
    ESCREVA         reduce using rule 14 (varmat -> VAR INTEIRO .)
    LEIA            reduce using rule 14 (varmat -> VAR INTEIRO .)
    FECHA_CHAV      reduce using rule 14 (varmat -> VAR INTEIRO .)


state 32

    (15) varmat -> VAR REAL .

    OPER_MAT        reduce using rule 15 (varmat -> VAR REAL .)
    INTEIRO         reduce using rule 15 (varmat -> VAR REAL .)
    REAL            reduce using rule 15 (varmat -> VAR REAL .)
    VAR             reduce using rule 15 (varmat -> VAR REAL .)
    FIM             reduce using rule 15 (varmat -> VAR REAL .)
    TIPO            reduce using rule 15 (varmat -> VAR REAL .)
    INT             reduce using rule 15 (varmat -> VAR REAL .)
    BOOLEANO        reduce using rule 15 (varmat -> VAR REAL .)
    CADEIA_CAR      reduce using rule 15 (varmat -> VAR REAL .)
    PARA            reduce using rule 15 (varmat -> VAR REAL .)
    SE              reduce using rule 15 (varmat -> VAR REAL .)
    ENQUANTO        reduce using rule 15 (varmat -> VAR REAL .)
    RETORNO         reduce using rule 15 (varmat -> VAR REAL .)
    FUNK            reduce using rule 15 (varmat -> VAR REAL .)
    NOME_FUNK       reduce using rule 15 (varmat -> VAR REAL .)
    ESCREVA         reduce using rule 15 (varmat -> VAR REAL .)
    LEIA            reduce using rule 15 (varmat -> VAR REAL .)
    FECHA_CHAV      reduce using rule 15 (varmat -> VAR REAL .)


state 33

    (16) operacao -> INTEIRO OPER_MAT . INTEIRO
    (19) operacao -> INTEIRO OPER_MAT . varmat
    (14) varmat -> . VAR INTEIRO
    (15) varmat -> . VAR REAL

    INTEIRO         shift and go to state 49
    VAR             shift and go to state 11

    varmat                         shift and go to state 50

state 34

    (20) operacao -> REAL OPER_MAT . REAL
    (22) operacao -> REAL OPER_MAT . varmat
    (14) varmat -> . VAR INTEIRO
    (15) varmat -> . VAR REAL

    REAL            shift and go to state 51
    VAR             shift and go to state 11

    varmat                         shift and go to state 52

state 35

    (24) codigo -> operacao operacao .

    FIM             reduce using rule 24 (codigo -> operacao operacao .)
    TIPO            reduce using rule 24 (codigo -> operacao operacao .)
    INT             reduce using rule 24 (codigo -> operacao operacao .)
    REAL            reduce using rule 24 (codigo -> operacao operacao .)
    BOOLEANO        reduce using rule 24 (codigo -> operacao operacao .)
    CADEIA_CAR      reduce using rule 24 (codigo -> operacao operacao .)
    PARA            reduce using rule 24 (codigo -> operacao operacao .)
    SE              reduce using rule 24 (codigo -> operacao operacao .)
    ENQUANTO        reduce using rule 24 (codigo -> operacao operacao .)
    RETORNO         reduce using rule 24 (codigo -> operacao operacao .)
    FUNK            reduce using rule 24 (codigo -> operacao operacao .)
    NOME_FUNK       reduce using rule 24 (codigo -> operacao operacao .)
    ESCREVA         reduce using rule 24 (codigo -> operacao operacao .)
    LEIA            reduce using rule 24 (codigo -> operacao operacao .)
    INTEIRO         reduce using rule 24 (codigo -> operacao operacao .)
    VAR             reduce using rule 24 (codigo -> operacao operacao .)
    FECHA_CHAV      reduce using rule 24 (codigo -> operacao operacao .)


state 36

    (20) operacao -> REAL . OPER_MAT REAL
    (22) operacao -> REAL . OPER_MAT varmat

    OPER_MAT        shift and go to state 34


state 37

    (38) codigo -> PARA ABRE_PAR . relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna
    (33) relacional -> . VAR OPER_RELA VAR
    (34) relacional -> . VAR OPER_RELA INTEIRO
    (35) relacional -> . VAR OPER_RELA REAL
    (36) relacional -> . VAR OPER_RELA CADEIA_CAR

    VAR             shift and go to state 54

    relacional                     shift and go to state 53

state 38

    (39) codigo -> SE ABRE_PAR . relacional FECHA_PAR expinterna
    (40) codigo -> SE ABRE_PAR . logico FECHA_PAR expinterna
    (41) codigo -> SE ABRE_PAR . relacional FECHA_PAR expinterna SENAO expinterna
    (42) codigo -> SE ABRE_PAR . logico FECHA_PAR expinterna SENAO expinterna
    (33) relacional -> . VAR OPER_RELA VAR
    (34) relacional -> . VAR OPER_RELA INTEIRO
    (35) relacional -> . VAR OPER_RELA REAL
    (36) relacional -> . VAR OPER_RELA CADEIA_CAR
    (29) logico -> . VAR OPER_LOG VAR
    (30) logico -> . VAR OPER_LOG CADEIA_CAR
    (31) logico -> . VAR OPER_LOG INTEIRO
    (32) logico -> . VAR OPER_LOG REAL

    VAR             shift and go to state 57

    relacional                     shift and go to state 55
    logico                         shift and go to state 56

state 39

    (43) codigo -> ENQUANTO ABRE_PAR . relacional FECHA_PAR expinterna
    (44) codigo -> ENQUANTO ABRE_PAR . BOOLEANO FECHA_PAR expinterna
    (33) relacional -> . VAR OPER_RELA VAR
    (34) relacional -> . VAR OPER_RELA INTEIRO
    (35) relacional -> . VAR OPER_RELA REAL
    (36) relacional -> . VAR OPER_RELA CADEIA_CAR

    BOOLEANO        shift and go to state 59
    VAR             shift and go to state 54

    relacional                     shift and go to state 58

state 40

    (45) codigo -> RETORNO ABRE_PAR . VAR FECHA_PAR

    VAR             shift and go to state 60


state 41

    (46) codigo -> RETORNO INTEIRO .

    FIM             reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    TIPO            reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    INT             reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    REAL            reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    BOOLEANO        reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    CADEIA_CAR      reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    PARA            reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    SE              reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    ENQUANTO        reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    RETORNO         reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    FUNK            reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    NOME_FUNK       reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    ESCREVA         reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    LEIA            reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    INTEIRO         reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    VAR             reduce using rule 46 (codigo -> RETORNO INTEIRO .)
    FECHA_CHAV      reduce using rule 46 (codigo -> RETORNO INTEIRO .)


state 42

    (55) codigo -> FUNK NOME_FUNK . regrafunk expinterna
    (53) regrafunk -> . ABRE_PAR param_vazio FECHA_PAR
    (54) regrafunk -> . ABRE_PAR parametro FECHA_PAR

    ABRE_PAR        shift and go to state 44

    regrafunk                      shift and go to state 61

state 43

    (56) codigo -> NOME_FUNK regrafunk .

    FIM             reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    TIPO            reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    INT             reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    REAL            reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    BOOLEANO        reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    CADEIA_CAR      reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    PARA            reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    SE              reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    ENQUANTO        reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    RETORNO         reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    FUNK            reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    NOME_FUNK       reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    ESCREVA         reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    LEIA            reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    INTEIRO         reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    VAR             reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)
    FECHA_CHAV      reduce using rule 56 (codigo -> NOME_FUNK regrafunk .)


state 44

    (53) regrafunk -> ABRE_PAR . param_vazio FECHA_PAR
    (54) regrafunk -> ABRE_PAR . parametro FECHA_PAR
    (47) param_vazio -> .
    (48) parametro -> . INTEIRO
    (49) parametro -> . REAL
    (50) parametro -> . CADEIA_CAR
    (51) parametro -> . VAR
    (52) parametro -> . parametro VIRG parametro

    FECHA_PAR       reduce using rule 47 (param_vazio -> .)
    INTEIRO         shift and go to state 64
    REAL            shift and go to state 65
    CADEIA_CAR      shift and go to state 66
    VAR             shift and go to state 67

    param_vazio                    shift and go to state 62
    parametro                      shift and go to state 63

state 45

    (57) codigo -> ESCREVA ABRE_PAR . CADEIA_CAR FECHA_PAR
    (58) codigo -> ESCREVA ABRE_PAR . CADEIA_CAR VAR FECHA_PAR
    (59) codigo -> ESCREVA ABRE_PAR . VAR FECHA_PAR
    (60) codigo -> ESCREVA ABRE_PAR . CADEIA_CAR INTEIRO FECHA_PAR
    (61) codigo -> ESCREVA ABRE_PAR . INTEIRO FECHA_PAR
    (62) codigo -> ESCREVA ABRE_PAR . CADEIA_CAR REAL FECHA_PAR
    (63) codigo -> ESCREVA ABRE_PAR . REAL FECHA_PAR

    CADEIA_CAR      shift and go to state 68
    VAR             shift and go to state 69
    INTEIRO         shift and go to state 70
    REAL            shift and go to state 71


state 46

    (64) codigo -> LEIA ABRE_PAR . VAR FECHA_PAR

    VAR             shift and go to state 72


state 47

    (17) operacao -> varmat OPER_MAT . varmat
    (18) operacao -> varmat OPER_MAT . INTEIRO
    (21) operacao -> varmat OPER_MAT . REAL
    (14) varmat -> . VAR INTEIRO
    (15) varmat -> . VAR REAL

    INTEIRO         shift and go to state 74
    REAL            shift and go to state 75
    VAR             shift and go to state 11

    varmat                         shift and go to state 73

state 48

    (9) codigo -> TIPO VAR OPER_ATRIB_IGUAL . INTEIRO
    (10) codigo -> TIPO VAR OPER_ATRIB_IGUAL . REAL
    (11) codigo -> TIPO VAR OPER_ATRIB_IGUAL . CADEIA_CAR
    (12) codigo -> TIPO VAR OPER_ATRIB_IGUAL . BOOLEANO
    (13) codigo -> TIPO VAR OPER_ATRIB_IGUAL . VAR

    INTEIRO         shift and go to state 77
    REAL            shift and go to state 78
    CADEIA_CAR      shift and go to state 79
    BOOLEANO        shift and go to state 80
    VAR             shift and go to state 76


state 49

    (16) operacao -> INTEIRO OPER_MAT INTEIRO .

    INTEIRO         reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    REAL            reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    VAR             reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    FIM             reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    TIPO            reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    INT             reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    BOOLEANO        reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    CADEIA_CAR      reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    PARA            reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    SE              reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    ENQUANTO        reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    RETORNO         reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    FUNK            reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    NOME_FUNK       reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    ESCREVA         reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    LEIA            reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)
    FECHA_CHAV      reduce using rule 16 (operacao -> INTEIRO OPER_MAT INTEIRO .)


state 50

    (19) operacao -> INTEIRO OPER_MAT varmat .

    INTEIRO         reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    REAL            reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    VAR             reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    FIM             reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    TIPO            reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    INT             reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    BOOLEANO        reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    CADEIA_CAR      reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    PARA            reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    SE              reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    ENQUANTO        reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    RETORNO         reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    FUNK            reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    NOME_FUNK       reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    ESCREVA         reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    LEIA            reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)
    FECHA_CHAV      reduce using rule 19 (operacao -> INTEIRO OPER_MAT varmat .)


state 51

    (20) operacao -> REAL OPER_MAT REAL .

    INTEIRO         reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    REAL            reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    VAR             reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    FIM             reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    TIPO            reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    INT             reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    BOOLEANO        reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    CADEIA_CAR      reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    PARA            reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    SE              reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    ENQUANTO        reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    RETORNO         reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    FUNK            reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    NOME_FUNK       reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    ESCREVA         reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    LEIA            reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)
    FECHA_CHAV      reduce using rule 20 (operacao -> REAL OPER_MAT REAL .)


state 52

    (22) operacao -> REAL OPER_MAT varmat .

    INTEIRO         reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    REAL            reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    VAR             reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    FIM             reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    TIPO            reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    INT             reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    BOOLEANO        reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    CADEIA_CAR      reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    PARA            reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    SE              reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    ENQUANTO        reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    RETORNO         reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    FUNK            reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    NOME_FUNK       reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    ESCREVA         reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    LEIA            reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)
    FECHA_CHAV      reduce using rule 22 (operacao -> REAL OPER_MAT varmat .)


state 53

    (38) codigo -> PARA ABRE_PAR relacional . PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna

    PONTO_VIRG      shift and go to state 81


state 54

    (33) relacional -> VAR . OPER_RELA VAR
    (34) relacional -> VAR . OPER_RELA INTEIRO
    (35) relacional -> VAR . OPER_RELA REAL
    (36) relacional -> VAR . OPER_RELA CADEIA_CAR

    OPER_RELA       shift and go to state 82


state 55

    (39) codigo -> SE ABRE_PAR relacional . FECHA_PAR expinterna
    (41) codigo -> SE ABRE_PAR relacional . FECHA_PAR expinterna SENAO expinterna

    FECHA_PAR       shift and go to state 83


state 56

    (40) codigo -> SE ABRE_PAR logico . FECHA_PAR expinterna
    (42) codigo -> SE ABRE_PAR logico . FECHA_PAR expinterna SENAO expinterna

    FECHA_PAR       shift and go to state 84


state 57

    (33) relacional -> VAR . OPER_RELA VAR
    (34) relacional -> VAR . OPER_RELA INTEIRO
    (35) relacional -> VAR . OPER_RELA REAL
    (36) relacional -> VAR . OPER_RELA CADEIA_CAR
    (29) logico -> VAR . OPER_LOG VAR
    (30) logico -> VAR . OPER_LOG CADEIA_CAR
    (31) logico -> VAR . OPER_LOG INTEIRO
    (32) logico -> VAR . OPER_LOG REAL

    OPER_RELA       shift and go to state 82
    OPER_LOG        shift and go to state 85


state 58

    (43) codigo -> ENQUANTO ABRE_PAR relacional . FECHA_PAR expinterna

    FECHA_PAR       shift and go to state 86


state 59

    (44) codigo -> ENQUANTO ABRE_PAR BOOLEANO . FECHA_PAR expinterna

    FECHA_PAR       shift and go to state 87


state 60

    (45) codigo -> RETORNO ABRE_PAR VAR . FECHA_PAR

    FECHA_PAR       shift and go to state 88


state 61

    (55) codigo -> FUNK NOME_FUNK regrafunk . expinterna
    (37) expinterna -> . ABRE_CHAV codigos FECHA_CHAV

    ABRE_CHAV       shift and go to state 90

    expinterna                     shift and go to state 89

state 62

    (53) regrafunk -> ABRE_PAR param_vazio . FECHA_PAR

    FECHA_PAR       shift and go to state 91


state 63

    (54) regrafunk -> ABRE_PAR parametro . FECHA_PAR
    (52) parametro -> parametro . VIRG parametro

    FECHA_PAR       shift and go to state 92
    VIRG            shift and go to state 93


state 64

    (48) parametro -> INTEIRO .

    FECHA_PAR       reduce using rule 48 (parametro -> INTEIRO .)
    VIRG            reduce using rule 48 (parametro -> INTEIRO .)


state 65

    (49) parametro -> REAL .

    FECHA_PAR       reduce using rule 49 (parametro -> REAL .)
    VIRG            reduce using rule 49 (parametro -> REAL .)


state 66

    (50) parametro -> CADEIA_CAR .

    FECHA_PAR       reduce using rule 50 (parametro -> CADEIA_CAR .)
    VIRG            reduce using rule 50 (parametro -> CADEIA_CAR .)


state 67

    (51) parametro -> VAR .

    FECHA_PAR       reduce using rule 51 (parametro -> VAR .)
    VIRG            reduce using rule 51 (parametro -> VAR .)


state 68

    (57) codigo -> ESCREVA ABRE_PAR CADEIA_CAR . FECHA_PAR
    (58) codigo -> ESCREVA ABRE_PAR CADEIA_CAR . VAR FECHA_PAR
    (60) codigo -> ESCREVA ABRE_PAR CADEIA_CAR . INTEIRO FECHA_PAR
    (62) codigo -> ESCREVA ABRE_PAR CADEIA_CAR . REAL FECHA_PAR

    FECHA_PAR       shift and go to state 94
    VAR             shift and go to state 95
    INTEIRO         shift and go to state 96
    REAL            shift and go to state 97


state 69

    (59) codigo -> ESCREVA ABRE_PAR VAR . FECHA_PAR

    FECHA_PAR       shift and go to state 98


state 70

    (61) codigo -> ESCREVA ABRE_PAR INTEIRO . FECHA_PAR

    FECHA_PAR       shift and go to state 99


state 71

    (63) codigo -> ESCREVA ABRE_PAR REAL . FECHA_PAR

    FECHA_PAR       shift and go to state 100


state 72

    (64) codigo -> LEIA ABRE_PAR VAR . FECHA_PAR

    FECHA_PAR       shift and go to state 101


state 73

    (17) operacao -> varmat OPER_MAT varmat .

    INTEIRO         reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    REAL            reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    VAR             reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    FIM             reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    TIPO            reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    INT             reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    BOOLEANO        reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    CADEIA_CAR      reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    PARA            reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    SE              reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    ENQUANTO        reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    RETORNO         reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    FUNK            reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    NOME_FUNK       reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    ESCREVA         reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    LEIA            reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)
    FECHA_CHAV      reduce using rule 17 (operacao -> varmat OPER_MAT varmat .)


state 74

    (18) operacao -> varmat OPER_MAT INTEIRO .

    INTEIRO         reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    REAL            reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    VAR             reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    FIM             reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    TIPO            reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    INT             reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    BOOLEANO        reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    CADEIA_CAR      reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    PARA            reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    SE              reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    ENQUANTO        reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    RETORNO         reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    FUNK            reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    NOME_FUNK       reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    ESCREVA         reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    LEIA            reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)
    FECHA_CHAV      reduce using rule 18 (operacao -> varmat OPER_MAT INTEIRO .)


state 75

    (21) operacao -> varmat OPER_MAT REAL .

    INTEIRO         reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    REAL            reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    VAR             reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    FIM             reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    TIPO            reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    INT             reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    BOOLEANO        reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    CADEIA_CAR      reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    PARA            reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    SE              reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    ENQUANTO        reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    RETORNO         reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    FUNK            reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    NOME_FUNK       reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    ESCREVA         reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    LEIA            reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)
    FECHA_CHAV      reduce using rule 21 (operacao -> varmat OPER_MAT REAL .)


state 76

    (13) codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .

    FIM             reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    TIPO            reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    INT             reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    REAL            reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    BOOLEANO        reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    CADEIA_CAR      reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    PARA            reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    SE              reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    ENQUANTO        reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    RETORNO         reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    FUNK            reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    NOME_FUNK       reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    ESCREVA         reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    LEIA            reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    INTEIRO         reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    VAR             reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)
    FECHA_CHAV      reduce using rule 13 (codigo -> TIPO VAR OPER_ATRIB_IGUAL VAR .)


state 77

    (9) codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .

    FIM             reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    TIPO            reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    INT             reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    REAL            reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    BOOLEANO        reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    CADEIA_CAR      reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    PARA            reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    SE              reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    ENQUANTO        reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    RETORNO         reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    FUNK            reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    NOME_FUNK       reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    ESCREVA         reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    LEIA            reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    INTEIRO         reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    VAR             reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)
    FECHA_CHAV      reduce using rule 9 (codigo -> TIPO VAR OPER_ATRIB_IGUAL INTEIRO .)


state 78

    (10) codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .

    FIM             reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    TIPO            reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    INT             reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    REAL            reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    BOOLEANO        reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    CADEIA_CAR      reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    PARA            reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    SE              reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    ENQUANTO        reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    RETORNO         reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    FUNK            reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    NOME_FUNK       reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    ESCREVA         reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    LEIA            reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    INTEIRO         reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    VAR             reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)
    FECHA_CHAV      reduce using rule 10 (codigo -> TIPO VAR OPER_ATRIB_IGUAL REAL .)


state 79

    (11) codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .

    FIM             reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    TIPO            reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    INT             reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    REAL            reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    BOOLEANO        reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    CADEIA_CAR      reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    PARA            reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    SE              reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    ENQUANTO        reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    RETORNO         reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    FUNK            reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    NOME_FUNK       reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    ESCREVA         reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    LEIA            reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    INTEIRO         reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    VAR             reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)
    FECHA_CHAV      reduce using rule 11 (codigo -> TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR .)


state 80

    (12) codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .

    FIM             reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    TIPO            reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    INT             reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    REAL            reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    BOOLEANO        reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    CADEIA_CAR      reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    PARA            reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    SE              reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    ENQUANTO        reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    RETORNO         reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    FUNK            reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    NOME_FUNK       reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    ESCREVA         reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    LEIA            reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    INTEIRO         reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    VAR             reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)
    FECHA_CHAV      reduce using rule 12 (codigo -> TIPO VAR OPER_ATRIB_IGUAL BOOLEANO .)


state 81

    (38) codigo -> PARA ABRE_PAR relacional PONTO_VIRG . relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna
    (33) relacional -> . VAR OPER_RELA VAR
    (34) relacional -> . VAR OPER_RELA INTEIRO
    (35) relacional -> . VAR OPER_RELA REAL
    (36) relacional -> . VAR OPER_RELA CADEIA_CAR

    VAR             shift and go to state 54

    relacional                     shift and go to state 102

state 82

    (33) relacional -> VAR OPER_RELA . VAR
    (34) relacional -> VAR OPER_RELA . INTEIRO
    (35) relacional -> VAR OPER_RELA . REAL
    (36) relacional -> VAR OPER_RELA . CADEIA_CAR

    VAR             shift and go to state 103
    INTEIRO         shift and go to state 104
    REAL            shift and go to state 105
    CADEIA_CAR      shift and go to state 106


state 83

    (39) codigo -> SE ABRE_PAR relacional FECHA_PAR . expinterna
    (41) codigo -> SE ABRE_PAR relacional FECHA_PAR . expinterna SENAO expinterna
    (37) expinterna -> . ABRE_CHAV codigos FECHA_CHAV

    ABRE_CHAV       shift and go to state 90

    expinterna                     shift and go to state 107

state 84

    (40) codigo -> SE ABRE_PAR logico FECHA_PAR . expinterna
    (42) codigo -> SE ABRE_PAR logico FECHA_PAR . expinterna SENAO expinterna
    (37) expinterna -> . ABRE_CHAV codigos FECHA_CHAV

    ABRE_CHAV       shift and go to state 90

    expinterna                     shift and go to state 108

state 85

    (29) logico -> VAR OPER_LOG . VAR
    (30) logico -> VAR OPER_LOG . CADEIA_CAR
    (31) logico -> VAR OPER_LOG . INTEIRO
    (32) logico -> VAR OPER_LOG . REAL

    VAR             shift and go to state 109
    CADEIA_CAR      shift and go to state 110
    INTEIRO         shift and go to state 111
    REAL            shift and go to state 112


state 86

    (43) codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR . expinterna
    (37) expinterna -> . ABRE_CHAV codigos FECHA_CHAV

    ABRE_CHAV       shift and go to state 90

    expinterna                     shift and go to state 113

state 87

    (44) codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR . expinterna
    (37) expinterna -> . ABRE_CHAV codigos FECHA_CHAV

    ABRE_CHAV       shift and go to state 90

    expinterna                     shift and go to state 114

state 88

    (45) codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .

    FIM             reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    TIPO            reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    INT             reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    REAL            reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    BOOLEANO        reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    CADEIA_CAR      reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    PARA            reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    SE              reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    ENQUANTO        reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    RETORNO         reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    FUNK            reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    NOME_FUNK       reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    ESCREVA         reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    LEIA            reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    INTEIRO         reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    VAR             reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)
    FECHA_CHAV      reduce using rule 45 (codigo -> RETORNO ABRE_PAR VAR FECHA_PAR .)


state 89

    (55) codigo -> FUNK NOME_FUNK regrafunk expinterna .

    FIM             reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    TIPO            reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    INT             reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    REAL            reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    BOOLEANO        reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    CADEIA_CAR      reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    PARA            reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    SE              reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    ENQUANTO        reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    RETORNO         reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    FUNK            reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    NOME_FUNK       reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    ESCREVA         reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    LEIA            reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    INTEIRO         reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    VAR             reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)
    FECHA_CHAV      reduce using rule 55 (codigo -> FUNK NOME_FUNK regrafunk expinterna .)


state 90

    (37) expinterna -> ABRE_CHAV . codigos FECHA_CHAV
    (6) codigos -> . codigos codigo
    (7) codigos -> . codigo
    (8) codigo -> . TIPO VAR
    (9) codigo -> . TIPO VAR OPER_ATRIB_IGUAL INTEIRO
    (10) codigo -> . TIPO VAR OPER_ATRIB_IGUAL REAL
    (11) codigo -> . TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR
    (12) codigo -> . TIPO VAR OPER_ATRIB_IGUAL BOOLEANO
    (13) codigo -> . TIPO VAR OPER_ATRIB_IGUAL VAR
    (23) codigo -> . operacao
    (24) codigo -> . operacao operacao
    (25) codigo -> . INT
    (26) codigo -> . REAL
    (27) codigo -> . BOOLEANO
    (28) codigo -> . CADEIA_CAR
    (38) codigo -> . PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna
    (39) codigo -> . SE ABRE_PAR relacional FECHA_PAR expinterna
    (40) codigo -> . SE ABRE_PAR logico FECHA_PAR expinterna
    (41) codigo -> . SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna
    (42) codigo -> . SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna
    (43) codigo -> . ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna
    (44) codigo -> . ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna
    (45) codigo -> . RETORNO ABRE_PAR VAR FECHA_PAR
    (46) codigo -> . RETORNO INTEIRO
    (55) codigo -> . FUNK NOME_FUNK regrafunk expinterna
    (56) codigo -> . NOME_FUNK regrafunk
    (57) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR
    (58) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR
    (59) codigo -> . ESCREVA ABRE_PAR VAR FECHA_PAR
    (60) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR
    (61) codigo -> . ESCREVA ABRE_PAR INTEIRO FECHA_PAR
    (62) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR
    (63) codigo -> . ESCREVA ABRE_PAR REAL FECHA_PAR
    (64) codigo -> . LEIA ABRE_PAR VAR FECHA_PAR
    (16) operacao -> . INTEIRO OPER_MAT INTEIRO
    (17) operacao -> . varmat OPER_MAT varmat
    (18) operacao -> . varmat OPER_MAT INTEIRO
    (19) operacao -> . INTEIRO OPER_MAT varmat
    (20) operacao -> . REAL OPER_MAT REAL
    (21) operacao -> . varmat OPER_MAT REAL
    (22) operacao -> . REAL OPER_MAT varmat
    (14) varmat -> . VAR INTEIRO
    (15) varmat -> . VAR REAL

    TIPO            shift and go to state 10
    INT             shift and go to state 17
    REAL            shift and go to state 13
    BOOLEANO        shift and go to state 15
    CADEIA_CAR      shift and go to state 14
    PARA            shift and go to state 18
    SE              shift and go to state 19
    ENQUANTO        shift and go to state 20
    RETORNO         shift and go to state 21
    FUNK            shift and go to state 22
    NOME_FUNK       shift and go to state 23
    ESCREVA         shift and go to state 24
    LEIA            shift and go to state 25
    INTEIRO         shift and go to state 12
    VAR             shift and go to state 11

    codigos                        shift and go to state 115
    codigo                         shift and go to state 9
    operacao                       shift and go to state 16
    varmat                         shift and go to state 26

state 91

    (53) regrafunk -> ABRE_PAR param_vazio FECHA_PAR .

    FIM             reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    TIPO            reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    INT             reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    REAL            reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    BOOLEANO        reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    CADEIA_CAR      reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    PARA            reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    SE              reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    ENQUANTO        reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    RETORNO         reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    FUNK            reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    NOME_FUNK       reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    ESCREVA         reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    LEIA            reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    INTEIRO         reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    VAR             reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    FECHA_CHAV      reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)
    ABRE_CHAV       reduce using rule 53 (regrafunk -> ABRE_PAR param_vazio FECHA_PAR .)


state 92

    (54) regrafunk -> ABRE_PAR parametro FECHA_PAR .

    FIM             reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    TIPO            reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    INT             reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    REAL            reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    BOOLEANO        reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    CADEIA_CAR      reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    PARA            reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    SE              reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    ENQUANTO        reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    RETORNO         reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    FUNK            reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    NOME_FUNK       reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    ESCREVA         reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    LEIA            reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    INTEIRO         reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    VAR             reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    FECHA_CHAV      reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)
    ABRE_CHAV       reduce using rule 54 (regrafunk -> ABRE_PAR parametro FECHA_PAR .)


state 93

    (52) parametro -> parametro VIRG . parametro
    (48) parametro -> . INTEIRO
    (49) parametro -> . REAL
    (50) parametro -> . CADEIA_CAR
    (51) parametro -> . VAR
    (52) parametro -> . parametro VIRG parametro

    INTEIRO         shift and go to state 64
    REAL            shift and go to state 65
    CADEIA_CAR      shift and go to state 66
    VAR             shift and go to state 67

    parametro                      shift and go to state 116

state 94

    (57) codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .

    FIM             reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    TIPO            reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    INT             reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    REAL            reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    BOOLEANO        reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    CADEIA_CAR      reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    PARA            reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    SE              reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    ENQUANTO        reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    RETORNO         reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    FUNK            reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    NOME_FUNK       reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    ESCREVA         reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    LEIA            reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    INTEIRO         reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    VAR             reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)
    FECHA_CHAV      reduce using rule 57 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR .)


state 95

    (58) codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR . FECHA_PAR

    FECHA_PAR       shift and go to state 117


state 96

    (60) codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO . FECHA_PAR

    FECHA_PAR       shift and go to state 118


state 97

    (62) codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL . FECHA_PAR

    FECHA_PAR       shift and go to state 119


state 98

    (59) codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .

    FIM             reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    TIPO            reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    INT             reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    REAL            reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    BOOLEANO        reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    CADEIA_CAR      reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    PARA            reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    SE              reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    ENQUANTO        reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    RETORNO         reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    FUNK            reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    NOME_FUNK       reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    ESCREVA         reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    LEIA            reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    INTEIRO         reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    VAR             reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)
    FECHA_CHAV      reduce using rule 59 (codigo -> ESCREVA ABRE_PAR VAR FECHA_PAR .)


state 99

    (61) codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .

    FIM             reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    TIPO            reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    INT             reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    REAL            reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    BOOLEANO        reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    CADEIA_CAR      reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    PARA            reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    SE              reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    ENQUANTO        reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    RETORNO         reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    FUNK            reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    NOME_FUNK       reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    ESCREVA         reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    LEIA            reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    INTEIRO         reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    VAR             reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)
    FECHA_CHAV      reduce using rule 61 (codigo -> ESCREVA ABRE_PAR INTEIRO FECHA_PAR .)


state 100

    (63) codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .

    FIM             reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    TIPO            reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    INT             reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    REAL            reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    BOOLEANO        reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    CADEIA_CAR      reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    PARA            reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    SE              reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    ENQUANTO        reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    RETORNO         reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    FUNK            reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    NOME_FUNK       reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    ESCREVA         reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    LEIA            reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    INTEIRO         reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    VAR             reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)
    FECHA_CHAV      reduce using rule 63 (codigo -> ESCREVA ABRE_PAR REAL FECHA_PAR .)


state 101

    (64) codigo -> LEIA ABRE_PAR VAR FECHA_PAR .

    FIM             reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    TIPO            reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    INT             reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    REAL            reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    BOOLEANO        reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    CADEIA_CAR      reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    PARA            reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    SE              reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    ENQUANTO        reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    RETORNO         reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    FUNK            reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    NOME_FUNK       reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    ESCREVA         reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    LEIA            reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    INTEIRO         reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    VAR             reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)
    FECHA_CHAV      reduce using rule 64 (codigo -> LEIA ABRE_PAR VAR FECHA_PAR .)


state 102

    (38) codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional . PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna

    PONTO_VIRG      shift and go to state 120


state 103

    (33) relacional -> VAR OPER_RELA VAR .

    PONTO_VIRG      reduce using rule 33 (relacional -> VAR OPER_RELA VAR .)
    FECHA_PAR       reduce using rule 33 (relacional -> VAR OPER_RELA VAR .)


state 104

    (34) relacional -> VAR OPER_RELA INTEIRO .

    PONTO_VIRG      reduce using rule 34 (relacional -> VAR OPER_RELA INTEIRO .)
    FECHA_PAR       reduce using rule 34 (relacional -> VAR OPER_RELA INTEIRO .)


state 105

    (35) relacional -> VAR OPER_RELA REAL .

    PONTO_VIRG      reduce using rule 35 (relacional -> VAR OPER_RELA REAL .)
    FECHA_PAR       reduce using rule 35 (relacional -> VAR OPER_RELA REAL .)


state 106

    (36) relacional -> VAR OPER_RELA CADEIA_CAR .

    PONTO_VIRG      reduce using rule 36 (relacional -> VAR OPER_RELA CADEIA_CAR .)
    FECHA_PAR       reduce using rule 36 (relacional -> VAR OPER_RELA CADEIA_CAR .)


state 107

    (39) codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .
    (41) codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna . SENAO expinterna

    FIM             reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    TIPO            reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    INT             reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    REAL            reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    BOOLEANO        reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    CADEIA_CAR      reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    PARA            reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    SE              reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    ENQUANTO        reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    RETORNO         reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    FUNK            reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    NOME_FUNK       reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    ESCREVA         reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    LEIA            reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    INTEIRO         reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    VAR             reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    FECHA_CHAV      reduce using rule 39 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna .)
    SENAO           shift and go to state 121


state 108

    (40) codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .
    (42) codigo -> SE ABRE_PAR logico FECHA_PAR expinterna . SENAO expinterna

    FIM             reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    TIPO            reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    INT             reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    REAL            reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    BOOLEANO        reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    CADEIA_CAR      reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    PARA            reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    SE              reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    ENQUANTO        reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    RETORNO         reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    FUNK            reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    NOME_FUNK       reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    ESCREVA         reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    LEIA            reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    INTEIRO         reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    VAR             reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    FECHA_CHAV      reduce using rule 40 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna .)
    SENAO           shift and go to state 122


state 109

    (29) logico -> VAR OPER_LOG VAR .

    FECHA_PAR       reduce using rule 29 (logico -> VAR OPER_LOG VAR .)


state 110

    (30) logico -> VAR OPER_LOG CADEIA_CAR .

    FECHA_PAR       reduce using rule 30 (logico -> VAR OPER_LOG CADEIA_CAR .)


state 111

    (31) logico -> VAR OPER_LOG INTEIRO .

    FECHA_PAR       reduce using rule 31 (logico -> VAR OPER_LOG INTEIRO .)


state 112

    (32) logico -> VAR OPER_LOG REAL .

    FECHA_PAR       reduce using rule 32 (logico -> VAR OPER_LOG REAL .)


state 113

    (43) codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .

    FIM             reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    TIPO            reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    INT             reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    REAL            reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    BOOLEANO        reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    CADEIA_CAR      reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    PARA            reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    SE              reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    ENQUANTO        reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    RETORNO         reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    FUNK            reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    NOME_FUNK       reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    ESCREVA         reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    LEIA            reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    INTEIRO         reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    VAR             reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)
    FECHA_CHAV      reduce using rule 43 (codigo -> ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna .)


state 114

    (44) codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .

    FIM             reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    TIPO            reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    INT             reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    REAL            reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    BOOLEANO        reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    CADEIA_CAR      reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    PARA            reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    SE              reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    ENQUANTO        reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    RETORNO         reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    FUNK            reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    NOME_FUNK       reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    ESCREVA         reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    LEIA            reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    INTEIRO         reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    VAR             reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)
    FECHA_CHAV      reduce using rule 44 (codigo -> ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna .)


state 115

    (37) expinterna -> ABRE_CHAV codigos . FECHA_CHAV
    (6) codigos -> codigos . codigo
    (8) codigo -> . TIPO VAR
    (9) codigo -> . TIPO VAR OPER_ATRIB_IGUAL INTEIRO
    (10) codigo -> . TIPO VAR OPER_ATRIB_IGUAL REAL
    (11) codigo -> . TIPO VAR OPER_ATRIB_IGUAL CADEIA_CAR
    (12) codigo -> . TIPO VAR OPER_ATRIB_IGUAL BOOLEANO
    (13) codigo -> . TIPO VAR OPER_ATRIB_IGUAL VAR
    (23) codigo -> . operacao
    (24) codigo -> . operacao operacao
    (25) codigo -> . INT
    (26) codigo -> . REAL
    (27) codigo -> . BOOLEANO
    (28) codigo -> . CADEIA_CAR
    (38) codigo -> . PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna
    (39) codigo -> . SE ABRE_PAR relacional FECHA_PAR expinterna
    (40) codigo -> . SE ABRE_PAR logico FECHA_PAR expinterna
    (41) codigo -> . SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna
    (42) codigo -> . SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna
    (43) codigo -> . ENQUANTO ABRE_PAR relacional FECHA_PAR expinterna
    (44) codigo -> . ENQUANTO ABRE_PAR BOOLEANO FECHA_PAR expinterna
    (45) codigo -> . RETORNO ABRE_PAR VAR FECHA_PAR
    (46) codigo -> . RETORNO INTEIRO
    (55) codigo -> . FUNK NOME_FUNK regrafunk expinterna
    (56) codigo -> . NOME_FUNK regrafunk
    (57) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR FECHA_PAR
    (58) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR
    (59) codigo -> . ESCREVA ABRE_PAR VAR FECHA_PAR
    (60) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR
    (61) codigo -> . ESCREVA ABRE_PAR INTEIRO FECHA_PAR
    (62) codigo -> . ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR
    (63) codigo -> . ESCREVA ABRE_PAR REAL FECHA_PAR
    (64) codigo -> . LEIA ABRE_PAR VAR FECHA_PAR
    (16) operacao -> . INTEIRO OPER_MAT INTEIRO
    (17) operacao -> . varmat OPER_MAT varmat
    (18) operacao -> . varmat OPER_MAT INTEIRO
    (19) operacao -> . INTEIRO OPER_MAT varmat
    (20) operacao -> . REAL OPER_MAT REAL
    (21) operacao -> . varmat OPER_MAT REAL
    (22) operacao -> . REAL OPER_MAT varmat
    (14) varmat -> . VAR INTEIRO
    (15) varmat -> . VAR REAL

    FECHA_CHAV      shift and go to state 123
    TIPO            shift and go to state 10
    INT             shift and go to state 17
    REAL            shift and go to state 13
    BOOLEANO        shift and go to state 15
    CADEIA_CAR      shift and go to state 14
    PARA            shift and go to state 18
    SE              shift and go to state 19
    ENQUANTO        shift and go to state 20
    RETORNO         shift and go to state 21
    FUNK            shift and go to state 22
    NOME_FUNK       shift and go to state 23
    ESCREVA         shift and go to state 24
    LEIA            shift and go to state 25
    INTEIRO         shift and go to state 12
    VAR             shift and go to state 11

    codigo                         shift and go to state 28
    operacao                       shift and go to state 16
    varmat                         shift and go to state 26

state 116

    (52) parametro -> parametro VIRG parametro .
    (52) parametro -> parametro . VIRG parametro

  ! shift/reduce conflict for VIRG resolved as shift
    FECHA_PAR       reduce using rule 52 (parametro -> parametro VIRG parametro .)
    VIRG            shift and go to state 93

  ! VIRG            [ reduce using rule 52 (parametro -> parametro VIRG parametro .) ]


state 117

    (58) codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .

    FIM             reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    TIPO            reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    INT             reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    REAL            reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    BOOLEANO        reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    CADEIA_CAR      reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    PARA            reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    SE              reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    ENQUANTO        reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    RETORNO         reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    FUNK            reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    NOME_FUNK       reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    ESCREVA         reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    LEIA            reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    INTEIRO         reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    VAR             reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)
    FECHA_CHAV      reduce using rule 58 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR VAR FECHA_PAR .)


state 118

    (60) codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .

    FIM             reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    TIPO            reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    INT             reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    REAL            reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    BOOLEANO        reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    CADEIA_CAR      reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    PARA            reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    SE              reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    ENQUANTO        reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    RETORNO         reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    FUNK            reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    NOME_FUNK       reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    ESCREVA         reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    LEIA            reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    INTEIRO         reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    VAR             reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)
    FECHA_CHAV      reduce using rule 60 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR INTEIRO FECHA_PAR .)


state 119

    (62) codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .

    FIM             reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    TIPO            reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    INT             reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    REAL            reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    BOOLEANO        reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    CADEIA_CAR      reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    PARA            reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    SE              reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    ENQUANTO        reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    RETORNO         reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    FUNK            reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    NOME_FUNK       reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    ESCREVA         reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    LEIA            reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    INTEIRO         reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    VAR             reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)
    FECHA_CHAV      reduce using rule 62 (codigo -> ESCREVA ABRE_PAR CADEIA_CAR REAL FECHA_PAR .)


state 120

    (38) codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG . VAR ITERADORES FECHA_PAR expinterna

    VAR             shift and go to state 124


state 121

    (41) codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO . expinterna
    (37) expinterna -> . ABRE_CHAV codigos FECHA_CHAV

    ABRE_CHAV       shift and go to state 90

    expinterna                     shift and go to state 125

state 122

    (42) codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO . expinterna
    (37) expinterna -> . ABRE_CHAV codigos FECHA_CHAV

    ABRE_CHAV       shift and go to state 90

    expinterna                     shift and go to state 126

state 123

    (37) expinterna -> ABRE_CHAV codigos FECHA_CHAV .

    FIM             reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    TIPO            reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    INT             reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    REAL            reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    BOOLEANO        reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    CADEIA_CAR      reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    PARA            reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    SE              reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    ENQUANTO        reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    RETORNO         reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    FUNK            reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    NOME_FUNK       reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    ESCREVA         reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    LEIA            reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    INTEIRO         reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    VAR             reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    FECHA_CHAV      reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)
    SENAO           reduce using rule 37 (expinterna -> ABRE_CHAV codigos FECHA_CHAV .)


state 124

    (38) codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR . ITERADORES FECHA_PAR expinterna

    ITERADORES      shift and go to state 127


state 125

    (41) codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .

    FIM             reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    TIPO            reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    INT             reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    REAL            reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    BOOLEANO        reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    CADEIA_CAR      reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    PARA            reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    SE              reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    ENQUANTO        reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    RETORNO         reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    FUNK            reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    NOME_FUNK       reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    ESCREVA         reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    LEIA            reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    INTEIRO         reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    VAR             reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)
    FECHA_CHAV      reduce using rule 41 (codigo -> SE ABRE_PAR relacional FECHA_PAR expinterna SENAO expinterna .)


state 126

    (42) codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .

    FIM             reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    TIPO            reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    INT             reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    REAL            reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    BOOLEANO        reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    CADEIA_CAR      reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    PARA            reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    SE              reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    ENQUANTO        reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    RETORNO         reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    FUNK            reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    NOME_FUNK       reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    ESCREVA         reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    LEIA            reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    INTEIRO         reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    VAR             reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)
    FECHA_CHAV      reduce using rule 42 (codigo -> SE ABRE_PAR logico FECHA_PAR expinterna SENAO expinterna .)


state 127

    (38) codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES . FECHA_PAR expinterna

    FECHA_PAR       shift and go to state 128


state 128

    (38) codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR . expinterna
    (37) expinterna -> . ABRE_CHAV codigos FECHA_CHAV

    ABRE_CHAV       shift and go to state 90

    expinterna                     shift and go to state 129

state 129

    (38) codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .

    FIM             reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    TIPO            reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    INT             reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    REAL            reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    BOOLEANO        reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    CADEIA_CAR      reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    PARA            reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    SE              reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    ENQUANTO        reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    RETORNO         reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    FUNK            reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    NOME_FUNK       reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    ESCREVA         reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    LEIA            reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    INTEIRO         reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    VAR             reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)
    FECHA_CHAV      reduce using rule 38 (codigo -> PARA ABRE_PAR relacional PONTO_VIRG relacional PONTO_VIRG VAR ITERADORES FECHA_PAR expinterna .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INTEIRO in state 16 resolved as shift
WARNING: shift/reduce conflict for REAL in state 16 resolved as shift
WARNING: shift/reduce conflict for VAR in state 16 resolved as shift
WARNING: shift/reduce conflict for VIRG in state 116 resolved as shift
